# Deployment untuk PostgreSQL (Authentication)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-db
  namespace: marketplace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-db
  template:
    metadata:
      labels:
        app: auth-db
    spec:
      containers:
      - name: postgres
        image: postgres:latest
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: marketplace-config
              key: AUTH_DB_NAME
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: marketplace-secret
              key: DB_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: marketplace-secret
              key: DB_PASSWORD
        volumeMounts:
        - name: auth-db-storage
          mountPath: "/var/lib/postgresql/data"
      volumes:
      - name: auth-db-storage
        persistentVolumeClaim:
          claimName: auth-db-pvc

# Service untuk PostgreSQL (Authentication) - ClusterIP
apiVersion: v1
kind: Service
metadata:
  name: auth-db
  namespace: marketplace
spec:
  type: ClusterIP
  selector:
    app: auth-db
  ports:
  - port: 5432
    targetPort: 5432

# Persistent Volume Claim untuk PostgreSQL (Authentication)
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: auth-db-pvc
  namespace: marketplace
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: hostpath

---

# Deployment untuk PostgreSQL (Orders)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orders-db
  namespace: marketplace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: orders-db
  template:
    metadata:
      labels:
        app: orders-db
    spec:
      containers:
      - name: postgres
        image: postgres:latest
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: marketplace-config
              key: ORDERS_DB_NAME
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: marketplace-secret
              key: DB_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: marketplace-secret
              key: DB_PASSWORD
        volumeMounts:
        - name: orders-db-storage
          mountPath: "/var/lib/postgresql/data"
      volumes:
      - name: orders-db-storage
        persistentVolumeClaim:
          claimName: orders-db-pvc

# Service untuk PostgreSQL (Orders) - ClusterIP
apiVersion: v1
kind: Service
metadata:
  name: orders-db
  namespace: marketplace
spec:
  type: ClusterIP
  selector:
    app: orders-db
  ports:
  - port: 5432
    targetPort: 5432

# Persistent Volume Claim untuk PostgreSQL (Orders)
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: orders-db-pvc
  namespace: marketplace
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: hostpath

---

# Deployment untuk PostgreSQL (Products)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: products-db
  namespace: marketplace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: products-db
  template:
    metadata:
      labels:
        app: products-db
    spec:
      containers:
      - name: postgres
        image: postgres:latest
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: marketplace-config
              key: PRODUCTS_DB_NAME
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: marketplace-secret
              key: DB_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: marketplace-secret
              key: DB_PASSWORD
        volumeMounts:
        - name: products-db-storage
          mountPath: "/var/lib/postgresql/data"
      volumes:
      - name: products-db-storage
        persistentVolumeClaim:
          claimName: products-db-pvc

# Service untuk PostgreSQL (Products) - ClusterIP
apiVersion: v1
kind: Service
metadata:
  name: products-db
  namespace: marketplace
spec:
  type: ClusterIP
  selector:
    app: products-db
  ports:
  - port: 5432
    targetPort: 5432

# Persistent Volume Claim untuk PostgreSQL (Products)
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: products-db-pvc
  namespace: marketplace
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: hostpath

---

# Deployment untuk PostgreSQL (Tenant)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tenant-db
  namespace: marketplace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tenant-db
  template:
    metadata:
      labels:
        app: tenant-db
    spec:
      containers:
      - name: postgres
        image: postgres:latest
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: marketplace-config
              key: TENANT_DB_NAME
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: marketplace-secret
              key: DB_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: marketplace-secret
              key: DB_PASSWORD
        volumeMounts:
        - name: tenant-db-storage
          mountPath: "/var/lib/postgresql/data"
      volumes:
      - name: tenant-db-storage
        persistentVolumeClaim:
          claimName: tenant-db-pvc

# Service untuk PostgreSQL (Tenant) - ClusterIP
apiVersion: v1
kind: Service
metadata:
  name: tenant-db
  namespace: marketplace
spec:
  type: ClusterIP
  selector:
    app: tenant-db
  ports:
  - port: 5432
    targetPort: 5432

# Persistent Volume Claim untuk PostgreSQL (Tenant)
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tenant-db-pvc
  namespace: marketplace
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: hostpath

---

# Deployment untuk PostgreSQL (Wishlist)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wishlist-db
  namespace: marketplace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wishlist-db
  template:
    metadata:
      labels:
        app: wishlist-db
    spec:
      containers:
      - name: postgres
        image: postgres:latest
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: marketplace-config
              key: WISHLIST_DB_NAME
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: marketplace-secret
              key: DB_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: marketplace-secret
              key: DB_PASSWORD
        volumeMounts:
        - name: wishlist-db-storage
          mountPath: "/var/lib/postgresql/data"
      volumes:
      - name: wishlist-db-storage
        persistentVolumeClaim:
          claimName: wishlist-db-pvc

# Service untuk PostgreSQL (Wishlist) - ClusterIP
apiVersion: v1
kind: Service
metadata:
  name: wishlist-db
  namespace: marketplace
spec:
  type: ClusterIP
  selector:
    app: wishlist-db
  ports:
  - port: 5432
    targetPort: 5432

# Persistent Volume Claim untuk PostgreSQL (Wishlist)
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wishlist-db-pvc
  namespace: marketplace
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: hostpath